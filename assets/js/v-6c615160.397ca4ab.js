"use strict";(self.webpackChunknote_openssl=self.webpackChunknote_openssl||[]).push([[576],{591:(l,i,p)=>{p.r(i),p.d(i,{data:()=>e});const e={key:"v-6c615160",path:"/outline.html",title:"",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"梳理思路",slug:"梳理思路",children:[]},{level:2,title:"网站大纲",slug:"网站大纲",children:[]}],filePathRelative:"outline.md",git:{updatedTime:1637420898e3,contributors:[{name:"chenxizhan",email:"chenxizhan1995@163.com",commits:1}]}}},3425:(l,i,p)=>{p.r(i),p.d(i,{default:()=>u});const e=(0,p(6252).uE)('<h2 id="梳理思路" tabindex="-1"><a class="header-anchor" href="#梳理思路" aria-hidden="true">#</a> 梳理思路</h2><ul><li>openssl 是什么</li><li>我只学习命令行接口，主要是为了生成一些自签名的TLS证书，开发时使用</li><li>起始目标是搭建自己的小型 CA <ul><li>从零，生成一个 CA 证书和若干终端证书</li><li>小型ca</li></ul></li></ul><p>由此衍生出来其它目标</p><ul><li>证书结构和字段 <ul><li>一个证书之所以成为CA证书/终端证书，它们是通过哪些字段区分的？对应openssl命令行工具如何设置？</li></ul></li></ul><p>知识点</p><ul><li><p>x509 证书对应标准 rfc5280</p></li><li><p>x509 证书结构，用 openssl 查看 x509 证书</p></li><li><p>证书扩展名，.pem .der 等证书格式</p></li><li><p>pki、ca、证书的基本概念</p></li><li><p>私有ca，权威ca，let&#39;s encrypt</p></li><li><p>openssl 对称加密</p><ul><li>aes <ul><li>解密 java 的 javax.crypt 包生成的 aes 加密数据</li><li>aes256cbc</li><li>aes256ebc</li><li>ev 和 key</li><li>pbkdf2</li></ul></li></ul></li><li><p>openssl 非对称加密</p><ul><li>openssl 生成、查看 rsa 密钥</li><li>openssl 生成、查看 ec 密钥</li><li>用 rsa 或 ec 密钥加密、签名</li></ul></li><li><p>openssl 签发证书</p><ul><li>好多种方式，放开，收紧，放开；换汤不换药，同一种功能，多种命令行接口， 同时，配置的灵活性，既足够，也不足够，配置项太多了。</li></ul></li><li><p>完全没有接触过 openssl 的人看这个教程学习 openssl，我应该怎么组织文章结构？</p><ul><li>？</li><li>一个简单的例子</li><li>解释例子</li><li></li></ul></li><li><p>我希望牢固掌握openssl的知识点，这个笔记应当能帮助我学习 openssl --- 做笔记的过程就是梳理、形成体系结构的过程</p></li><li><p>将来的快速参考</p><ul><li>如果我忘记了，希望看这里能快速唤起相关回忆，应当如何组织这个笔记？ Ans： <ul><li>对于初次学习的，各种细节都要覆盖到</li><li>但对于复习，一定要抓住主脉络，省略细节，避免大量细节淹没主要知识主干</li></ul></li><li>需要用 openssl 完成某一目的，要拿来就能用，又该如何处理？ Ans： <ul><li>整理用例</li><li>对用例进行要点解释</li><li>有缺漏的点，补上</li></ul></li></ul></li><li><p>我学习的是 1.1.1，还是用 1.1.1 吧。途中遇到的例子，</p><p>主要是给自己看到，附带可以给别人看，不要舍本逐末，整理笔记的时候会很麻烦的。</p></li><li><p>不要有太多的超链接，会乱的</p></li></ul><h2 id="网站大纲" tabindex="-1"><a class="header-anchor" href="#网站大纲" aria-hidden="true">#</a> 网站大纲</h2><p>三篇：</p><ul><li><p>基础一篇：</p><ul><li>出发点：学习基础。任何一个领域，总会有一些及其基础的知识，必须学的</li><li>特点：全面、基础。也就是，各个关键点都有涉及，但浅尝辄止。有一定的系统性，但不具备实战能力。</li><li>目标：打基础</li><li>不足：光靠这些搞不定实际中的问题。</li></ul></li><li><p>案例一篇：针对设想的或实际遇到的场景梳理并做笔记，每遇到一个案例就收集一篇。</p><ul><li><p>特点：</p><ul><li>以案例为主线串联知识点，实战、实战、实战。</li></ul></li><li><p>目标/动机/要解决的问题：</p><ol><li>作为模板，实际使用中遇到相似的问题，可以参考案例快速解决问题</li><li>更深入的理解知识</li><li>知行合一，光知道，不会用，白搭，通过案例学会应用知识</li></ol></li><li><p>前提：先掌握最基础的知识点，因为不知道相关领域的常识，就不能吃透这些例子，不能举一反三。</p></li><li><p>注意事项：案例强调解决问题，强调作为模板的可能。不适合深入展开涉及到的知识点，如果每个知识点都 写的很详细，就显得太臃肿了。</p></li></ul></li><li><p>解释一篇：深入展开案例中的知识点</p><ul><li>特点： <ul><li>依附于案例，自身不成体系，但通过案例可以把这些知识点串联起来</li><li>强调深度、强调细节</li></ul></li><li>目标： <ul><li>深入理解各个知识点，如此才能吃透案例，才能做到灵活运用</li></ul></li></ul></li></ul><p>既然如此，案例就得做好编号，基础性的案例要靠前，复杂的案例要靠后，讲究循序渐进。</p><p>这是技术方面的知识，适合这种一拆为三的学习方法，对于其它的尚且不知道。</p><p>这种方式灵活可扩展：</p><ol><li>可以不必把所有知识都学一遍，就能解决实际问题</li><li>可以随着实战，逐步填充知识体系。</li></ol><p>初高中有所谓的分流，去上职业技术学校，万万没想到，到了大学，在毕业之后，还是干的技术活，高级技工……。逃不开的宿命。</p>',14),s={},u=(0,p(3744).Z)(s,[["render",function(l,i){return e}]])},3744:(l,i)=>{i.Z=(l,i)=>{const p=l.__vccOpts||l;for(const[l,e]of i)p[l]=e;return p}}}]);